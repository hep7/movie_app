{"version":3,"sources":["Movie.js","App.js","reportWebVitals.js","index.js"],"names":["Movie","id","year","title","summery","poster","genres","className","src","alt","map","genre","index","slice","prototypes","PropTypes","number","isRequired","string","arrayOf","App","state","isLoading","movies","getMovies","a","axios","get","data","setState","this","movie","description_full","medium_cover_image","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8TAIA,SAASA,EAAT,GAAqD,EAArCC,GAAsC,IAAnCC,EAAkC,EAAlCA,KAAKC,EAA6B,EAA7BA,MAAMC,EAAuB,EAAvBA,QAAQC,EAAe,EAAfA,OAAOC,EAAQ,EAARA,OACzC,OACI,sBAAKC,UAAU,QAAf,UACI,qBAAKC,IAAKH,EAAQI,IAAI,UAAUN,MAAM,UACtC,sBAAKI,UAAY,aAAjB,UACI,oBAAIA,UAAY,cAAhB,SAA+BJ,IAC/B,oBAAII,UAAY,aAAhB,SAA8BL,IAC9B,oBAAIK,UAAW,SAAf,SACID,EAAOI,KAAK,SAACC,EAAMC,GAAP,OACR,oBAAgBL,UAAU,gBAA1B,SAA2CI,GAAlCC,QAGjB,mBAAGL,UAAY,gBAAf,SAAgCH,EAAQS,MAAM,EAAE,aAQhEb,EAAMc,WAAa,CACfb,GAAGc,IAAUC,OAAOC,WACpBf,KAAKa,IAAUC,OAAOC,WACtBd,MAAMY,IAAUG,OAAOD,WACvBb,QAAQW,IAAUG,OAAOD,WACzBZ,OAAOU,IAAUG,OAAOD,WACxBX,OAAQS,IAAUI,QAAQJ,IAAUG,QAAQD,YAGjCjB,QCUAoB,G,kNArCbC,MAAO,CACLC,WAAU,EACVC,OAAO,I,EAETC,U,sBAAY,8BAAAC,EAAA,sEACkCC,IAAMC,IAAI,4DAD5C,gBACeJ,EADf,EACFK,KAASA,KAAQL,OACzB,EAAKM,SAAS,CAACN,SAAOD,WAAU,IAFtB,2C,kEAMVQ,KAAKN,c,+BAEG,IAAD,EACoBM,KAAKT,MAAzBC,EADA,EACAA,UAAUC,EADV,EACUA,OACjB,OAAO,yBAAShB,UAAU,YAAnB,SAAgCe,EAEnC,qBAAKf,UAAU,SAAf,SACE,sBAAMA,UAAU,eAAhB,0BAIF,qBAAKA,UAAU,SAAf,SACGgB,EAAOb,KAAI,SAAAqB,GAAK,OACf,cAAC,EAAD,CAEE9B,GAAI8B,EAAM9B,GACVC,KAAM6B,EAAM7B,KACZC,MAAO4B,EAAM5B,MACbC,QAAS2B,EAAMC,iBACf3B,OAAQ0B,EAAME,mBACd3B,OAAQyB,EAAMzB,QANTyB,EAAM9B,e,GAzBPiC,IAAMC,YCOTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.8aad6c71.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from \"prop-types\"\r\nimport \"./Movie.css\"\r\n\r\nfunction Movie({id,year,title,summery,poster,genres}){\r\n    return (\r\n        <div className=\"movie\">\r\n            <img src={poster} alt=\"{title}\" title=\"title\" />\r\n            <div className = \"move__data\">\r\n                <h3 className = \"move__title\">{title}</h3>\r\n                <h5 className = \"movie_year\">{year}</h5>                \r\n                <ul className =\"genres\">{\r\n                    genres.map( (genre,index) => (\r\n                        <li key={index} className=\"genres__genre\">{genre}</li>\r\n                    ))\r\n                }</ul>\r\n                <p className = \"movie_summary\">{summery.slice(0,140)}</p>               \r\n                \r\n            </div>\r\n        </div>\r\n        \r\n    );\r\n}\r\n\r\nMovie.prototypes = {\r\n    id:PropTypes.number.isRequired,\r\n    year:PropTypes.number.isRequired,\r\n    title:PropTypes.string.isRequired,\r\n    summery:PropTypes.string.isRequired,\r\n    poster:PropTypes.string.isRequired,\r\n    genres: PropTypes.arrayOf(PropTypes.string).isRequired\r\n}\r\n\r\nexport default Movie;","import React from 'react';\nimport axios from 'axios';\nimport Movie from './Movie';\nimport \"./App.css\"\n\nclass App extends React.Component {\n  state ={\n    isLoading:true,\n    movies:[]\n  };\n  getMovies = async () => {\n    const { data : { data : {movies}}} =  await axios.get(\"https://yts-proxy.now.sh/list_movies.json?sort_by=rating\");    \n    this.setState({movies,isLoading:false});    \n  }\n  \n  componentDidMount() {    \n    this.getMovies();\n  }\n  render() {\n    const {isLoading,movies} = this.state;\n    return <section className=\"container\">{isLoading \n      ? (\n        <div className=\"loader\">\n          <span className=\"loader__text\">\"Loading\" </span>\n        </div>\n        \n      ) : ( \n        <div className=\"movies\">\n          {movies.map(movie => (\n            <Movie \n              key={movie.id} \n              id={movie.id}\n              year={movie.year}\n              title={movie.title}\n              summery={movie.description_full}\n              poster={movie.medium_cover_image}\n              genres={movie.genres}\n            />\n          ))}\n        </div>        \n      )}</section>\n  }\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}